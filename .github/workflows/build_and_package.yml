name: Build and Package PyGitHubRipper

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller requests beautifulsoup4 streamlit

    - name: Build launch.exe
      run: |
        pyinstaller --onefile launch.py
        move dist\launch.exe .

    - name: Increment version
      id: increment_version
      run: |
        VERSION_FILE="VERSION"
        if (Test-Path $VERSION_FILE) {
          $VERSION = Get-Content $VERSION_FILE
        } else {
          $VERSION = "0.0.0"
        }
        $ADDR = $VERSION -split '\.'
        $PATCH = [int]$ADDR[2] + 1
        $NEW_VERSION = "$($ADDR[0]).$($ADDR[1]).$PATCH"
        $NEW_VERSION > $VERSION_FILE
        echo "::set-output name=new_version::$NEW_VERSION"

    - name: Create builds directory
      run: |
        if (-Not (Test-Path -Path builds)) {
          New-Item -ItemType Directory -Path builds
        }

    - name: Package files
      run: |
        Compress-Archive -Path launch.exe,git-ripperv3.py -DestinationPath builds\PyGitHubRipper-v-${{ steps.increment_version.outputs.new_version }}.zip

    - name: Commit changes
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add .
        git commit -m "Build and package version ${{ steps.increment_version.outputs.new_version }}"
        git tag "v${{ steps.increment_version.outputs.new_version }}"
        git push origin main --tags

    - name: Clean up
      run: |
        Remove-Item -Recurse -Force dist, build, __pycache__, launch.spec, launch.exe
